<library path="lib/libline_tracker_min_jerk_action">
  <class name="std_trackers/LineTrackerMinJerkAction" type="LineTrackerMinJerkAction" base_class_type="trackers_manager::Tracker">
    <description>
      This is a tracker which follows a line from the current position to a given goal position using min jerk trajectory.
    </description>
  </class>
</library>

<!--
<library path="lib/libline_tracker_trapezoid">
  <class name="std_trackers/LineTrackerTrapezoid" type="LineTrackerTrapezoid" base_class_type="trackers_manager::Tracker">
    <description>
      This is a tracker which follows a line from the current position to a given goal position using a trapezoidal trajectory.
    </description>
  </class>
</library>
-->

<library path="lib/libline_tracker_distance_action">
  <class name="std_trackers/LineTrackerDistanceAction" type="LineTrackerDistanceAction" base_class_type="trackers_manager::Tracker">
    <description>
      This is a tracker which follows a line from the current position to a given goal position using a trapezoidal trajectory with distance along the trajectory as the parameter instead of time.
    </description>
  </class>
</library>

<!--
<library path="lib/libline_tracker_yaw">
  <class name="std_trackers/LineTrackerYaw" type="LineTrackerYaw" base_class_type="trackers_manager::Tracker">
    <description>
      This is a tracker which follows a trapezoidal trajectory to a desired position and yaw.
    </description>
  </class>
</library>
-->

<library path="lib/libnull_tracker">
  <class name="std_trackers/NullTracker" type="NullTracker" base_class_type="trackers_manager::Tracker">
    <description>
      This tracker literally does nothing.
    </description>
  </class>
</library>

<library path="lib/libvelocity_tracker_action">
  <class name="std_trackers/VelocityTrackerAction" type="VelocityTrackerAction" base_class_type="trackers_manager::Tracker">
    <description>
      This tracker commands a desired velocity for the robot.
    </description>
  </class>
</library>

<library path="lib/libsmooth_vel_tracker_action">
  <class name="std_trackers/SmoothVelTrackerAction" type="SmoothVelTrackerAction" base_class_type="trackers_manager::Tracker">
    <description>
      This tracker goes from point A to point B trying to maintain constant velocity with a smooth ramp up.
    </description>
  </class>
</library>

<library path="lib/libcircle_tracker_action">
  <class name="std_trackers/CircleTrackerAction" type="CircleTrackerAction" base_class_type="trackers_manager::Tracker">
    <description>
      This tracker commands the robot to fly in a circle of a given size and period.
    </description>
  </class>
</library>

<library path="lib/libtrajectory_tracker">
  <class name="std_trackers/TrajectoryTracker" type="TrajectoryTracker" base_class_type="trackers_manager::Tracker">
    <description>
      This tracker commands the robot to follow a smooth trajectory passing through multiple waypoints.
    </description>
  </class>
</library>

<library path="lib/liblissajous_tracker_action">
  <class name="std_trackers/LissajousTrackerAction" type="LissajousTrackerAction" base_class_type="trackers_manager::Tracker">
    <description>
      Follows a complex 3D Lissajous tracjectory
    </description>
  </class>
</library>
